# Generated by Django 4.1.9 on 2023-05-10 14:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IngredientRecipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveSmallIntegerField(
                        help_text="Укажите количество ингредиента",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Минимальное количество ингредиентов 1"
                            )
                        ],
                        verbose_name="Количество",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cостав рецепта",
                "verbose_name_plural": "Состав рецепта",
            },
        ),
        migrations.CreateModel(
            name="Ingridient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Введите название ингредиента",
                        max_length=200,
                        verbose_name="Название ингредиента",
                    ),
                ),
                (
                    "measurement",
                    models.CharField(
                        help_text="Введите единицу измерения",
                        max_length=200,
                        verbose_name="Единица измерения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингредиент",
                "verbose_name_plural": "Ингредиенты",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Введите название тега",
                        max_length=200,
                        unique=True,
                        verbose_name="Название тега",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("#D2691E", "Chocolate"),
                            ("#008000", "Green"),
                            ("#00FFFF", "Aqua"),
                            (
                                "[('#D2691E', 'Завтрак'), ('#008000', 'Обед'), ('#00FFFF', 'Ужин')]",
                                "Tags",
                            ),
                        ],
                        default="#D2691E",
                        help_text="Выбрать цвет",
                        max_length=66,
                        unique=True,
                        verbose_name="Цвета в HEX-color",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Укажите уникальный слаг",
                        max_length=200,
                        unique=True,
                        verbose_name="Слаг",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Введите название рецепта",
                        max_length=200,
                        verbose_name="Название рецепта",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Добавьте изображение рецепта",
                        upload_to="media/",
                        verbose_name="Изображение рецепта",
                    ),
                ),
                (
                    "cook_time",
                    models.PositiveSmallIntegerField(
                        help_text="Укажите время приготовления рецепта в минутах",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Минимальное время приготовления"
                            )
                        ],
                        verbose_name="Время приготовления",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Автор рецепта",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор рецепта",
                    ),
                ),
                (
                    "ingridients",
                    models.ManyToManyField(
                        through="recipes.IngredientRecipe",
                        to="recipes.ingridient",
                        verbose_name="Ингредиент",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        help_text="Выберите tag",
                        to="recipes.tag",
                        verbose_name="Название тега",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ["-id"],
                "default_related_name": "recipe",
            },
        ),
        migrations.AddField(
            model_name="ingredientrecipe",
            name="ingredient",
            field=models.ForeignKey(
                help_text="Укажите ингредиенты",
                on_delete=django.db.models.deletion.CASCADE,
                to="recipes.ingridient",
                verbose_name="Ингредиент",
            ),
        ),
        migrations.AddField(
            model_name="ingredientrecipe",
            name="recipe",
            field=models.ForeignKey(
                help_text="Выберите рецепт",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recipe_ingredients",
                to="recipes.recipe",
                verbose_name="Название рецепта",
            ),
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.UniqueConstraint(
                fields=("name", "author"), name="unique_recipe"
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredientrecipe",
            constraint=models.UniqueConstraint(
                fields=("recipe", "ingredient"), name="unique_ingredients"
            ),
        ),
        migrations.AddConstraint(
            model_name="follow",
            constraint=models.UniqueConstraint(
                fields=("user", "following"), name="unique follow"
            ),
        ),
    ]
